{"version":3,"file":"static/js/387.4f6bdbe4.chunk.js","mappings":"6SAGAA,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGC,EADH,sCACiDF,GADjD,SAEoBD,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACGJ,EADH,iBAC4BI,EAD5B,oBACgDN,GADhD,SAEoBD,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,MAHb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gFACGJ,EADH,iBAC4BI,EAD5B,4BACwDN,GADxD,SAEoBD,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,gFACGJ,EADH,iBAC4BI,EAD5B,4BACwDN,GADxD,SAEoBD,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACGR,EADH,gCAC2CF,EAD3C,kBAC4DU,GAD5D,SAEoBX,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,KAAKO,SAHlB,kE,6JC5BMC,EAASC,EAAAA,GAAAA,IAAH,6GAONC,EAAWD,EAAAA,GAAAA,GAAH,iIAQRE,EAAWF,EAAAA,GAAAA,GAAH,0V,SCkBrB,EA9Ba,WACT,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACF,IAAMC,EAAI,mCAAG,gHAEad,EAAAA,EAAAA,IAAQQ,GAFrB,OAEHO,EAFG,OAGHC,EAAWD,EAAQJ,KACzBC,EAAQI,GAJC,gDAMEC,QAAQC,IAAR,MANF,yDAAH,qDAQdJ,GACH,GAAE,CAACN,KAEG,+BACC,SAACF,EAAD,UACKK,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWb,EAApB,EAAoBA,GAAIc,EAAxB,EAAwBA,aAAxB,OACN,UAACf,EAAD,YACI,SAACH,EAAD,CAAQmB,IAAKD,EAAa,mCAAD,OAAoCA,GAAe,sCAAuCE,IAAG,UAAKJ,EAAL,gBACtH,wBAAKA,KACL,uBAAIC,MAHOb,EADT,OASzB,C","sources":["Services/Api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["// import PropTypes from 'prop-types';\nimport axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3e7e4bfa0442b0796c1ab4982aa49a79'\n\n\nexport async function getTrendingMovies() {\n    const searchParams = `/trending/movie/day?api_key=${API_KEY}`\n    const response = await axios.get(searchParams)\n    return response.data\n}\n\nexport async function getMoviesInfo(movie_id) {\n    const searchParams = `/movie/${movie_id}?api_key=${API_KEY}`\n    const response = await axios.get(searchParams)\n    return response.data\n}\nexport async function getRewiews(movie_id) {\n    const searchParams = `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    const response = await axios.get(searchParams)\n    return response.data\n}\n\nexport async function getCast(movie_id) {\n    const searchParams = `/movie/${movie_id}/credits?api_key=${API_KEY}`\n    const response = await axios.get(searchParams)\n    return response.data\n}\n\nexport async function getSearch(query) {\n    const searchParams = `/search/movie?api_key=${API_KEY}&query=${query}`\n    const response = await axios.get(searchParams)\n    return response.data.results\n}\n\n\n\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const Poster = styled.img`\n  width: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 5px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 30px;\n  padding: 10px;\n`;\n\nexport const CastItem = styled.li`\n  padding: 10px;\n  margin: 5px;\n  list-style-type: none;\n  text-align: center;\n  width: 150px;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n`;\n","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from \"Services/Api\"\nimport { Poster, CastList, CastItem } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const { id } = useParams()\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n            const Cast = async () => {\n            try {\n                const credits = await getCast(id);\n                const castData = credits.cast\n                setCast(castData)\n            }\n            catch (error) {console.log(error) }\n        }\n        Cast()\n    }, [id]);\n    \n    return <>\n            <CastList>\n                {cast.map(({ name, character, id, profile_path}) =>\n                    <CastItem key={id}>\n                        <Poster src={profile_path?`https://image.tmdb.org/t/p/w500/${profile_path}`:'https://via.placeholder.com/100x150'} alt={`${name}'s poster`} />\n                        <h5>{name}</h5>\n                        <p>{character}</p>\n                    </CastItem>\n                )}\n            </CastList>\n    </>\n}\n\n\nexport default Cast"],"names":["axios","API_KEY","getTrendingMovies","searchParams","response","data","getMoviesInfo","movie_id","getRewiews","getCast","getSearch","query","results","Poster","styled","CastList","CastItem","id","useParams","useState","cast","setCast","useEffect","Cast","credits","castData","console","log","map","name","character","profile_path","src","alt"],"sourceRoot":""}