{"version":3,"file":"static/js/907.1c19e1f4.chunk.js","mappings":"6SAGAA,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGC,EADH,sCACiDF,GADjD,SAEoBD,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACGJ,EADH,iBAC4BI,EAD5B,oBACgDN,GADhD,SAEoBD,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,MAHb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gFACGJ,EADH,iBAC4BI,EAD5B,4BACwDN,GADxD,SAEoBD,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,gFACGJ,EADH,iBAC4BI,EAD5B,4BACwDN,GADxD,SAEoBD,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,MAHb,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACGR,EADH,gCAC2CF,EAD3C,kBAC4DU,GAD5D,SAEoBX,EAAAA,GAAAA,IAAUG,GAF9B,cAEGC,EAFH,yBAGIA,EAASC,KAAKO,SAHlB,kE,2FC3BMC,EAAWC,EAAAA,GAAAA,GAAH,8DAKRC,EAAiBD,EAAAA,GAAAA,GAAH,8DAKdE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uO,kBCEtB,EAXkB,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACXa,GAAWC,EAAAA,EAAAA,MACjB,OAAO,SAACN,EAAD,UACMR,EAAKe,KAAI,SAAAC,GAAK,OAAK,SAACN,EAAD,WAChB,SAACC,EAAD,CAAWM,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,SAAkEG,EAAMK,SADnCL,EAAME,GAAhC,KAG9B,C,4ICPYI,EAAmBb,EAAAA,GAAAA,OAAH,0bAOHc,GAcbC,EAAQf,EAAAA,GAAAA,MAAH,uWAoBLgB,EAAOhB,EAAAA,GAAAA,KAAH,8W,SCzCJiB,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACvB,OAAO,UAACF,EAAD,CAAOE,SAAUA,EAAjB,WACC,SAACH,EAAD,CACII,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,6BAGhB,SAACV,EAAD,CAAkBO,KAAK,aAElC,E,qDC+BD,EAtCe,WACX,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOnC,EAAP,KAAqBoC,EAArB,KACA,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAAexC,EAAayC,IAAI,UAAY,IAElDC,EAAAA,EAAAA,YAAU,WACN,GAAKF,EAAL,CAII,IAAMG,EAAK,mCAAG,8GAESpC,EAAAA,EAAAA,IAAUiC,GAFnB,OAEJtC,EAFI,OAIVqC,EADkBrC,GAHR,gDAMC0C,QAAQC,IAAR,MAND,yDAAH,qDAQfF,GACK,CACR,GAAE,CAACH,IAYJ,OAAO,4BACH,SAACZ,EAAD,CAAWC,SAXE,SAACiB,GACdA,EAAEC,iBACF,IAAM/C,EAAe8C,EAAEE,OAAOC,SAASzC,MAAM0C,MACjB,KAAxBlD,EAAamD,QACbC,IAAAA,OAAAA,QAAwB,4BAE5BhB,EAAgB,CAAC5B,MAAMR,GAC1B,KAKG,SAACqD,EAAA,EAAD,CAAWnD,KAAMoC,MAExB,C","sources":["Services/Api.jsx","components/MovieList/Movielist.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/Saerchbox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["// import PropTypes from 'prop-types';\nimport axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3e7e4bfa0442b0796c1ab4982aa49a79'\n\n\nexport async function getTrendingMovies() {\n    const searchParams = `/trending/movie/day?api_key=${API_KEY}`\n    const response = await axios.get(searchParams)\n    return response.data\n}\n\nexport async function getMoviesInfo(movie_id) {\n    const searchParams = `/movie/${movie_id}?api_key=${API_KEY}`\n    const response = await axios.get(searchParams)\n    return response.data\n}\nexport async function getRewiews(movie_id) {\n    const searchParams = `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    const response = await axios.get(searchParams)\n    return response.data\n}\n\nexport async function getCast(movie_id) {\n    const searchParams = `/movie/${movie_id}/credits?api_key=${API_KEY}`\n    const response = await axios.get(searchParams)\n    return response.data\n}\n\nexport async function getSearch(query) {\n    const searchParams = `/search/movie?api_key=${API_KEY}&query=${query}`\n    const response = await axios.get(searchParams)\n    return response.data.results\n}\n\n\n\n\n\n\n\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FilmList = styled.ul`\n  list-style: none;\n  padding: 0px;\n`;\n\nexport const ListComponents = styled.li`\n  padding: 5px;\n  margin-left: 5px;\n`;\n\nexport const LinkStyle = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: large;\n  font-weight: 500;\n  transition: all 500ms ease;\n\n  :hover,\n  :focus-visible {\n    color: orange;\n    transition: all 200ms ease;\n  }\n`;\n","import PropTypes from 'prop-types'\nimport { FilmList, LinkStyle, ListComponents } from './Movielist.styled'\nimport { useLocation } from \"react-router-dom\";\n\nconst MovieList = ({ data }) => {\n    const location = useLocation();\n    return <FilmList>\n                {data.map(movie => (<ListComponents key={movie.id}>\n                    <LinkStyle to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</LinkStyle></ListComponents>))}  \n           </FilmList>\n}\nMovieList.propTypes = {\n  data: PropTypes.array.isRequired,\n}\n\nexport default MovieList\n\n","import styled from 'styled-components';\nimport search from '../images/search.png';\n\nexport const SearchFormButton = styled.button`\n  display: inline - block;\n  width: 45px;\n  height: 40px;\n  border: 0;\n  border-radius: 50%;\n  margin-left: 5px;\n  background-image: url(${search});\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n    border: 1px solid orange;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  height: 40px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n  :hover,\n  :focus {\n    border: 1px solid orange;\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 10px;\n  max-width: 350px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  background-color: #fff;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: rgba(17, 17, 26, 0.1) 0px 4px 16px,\n    rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px;\n`;\n","import PropTypes from 'prop-types'\nimport { Form, SearchFormButton, Input } from \"./Saerchbox.styled\"\n\nexport const SearchBox = ({onSubmit}) => {\n    return <Form  onSubmit={onSubmit}>\n            <Input\n                name='query'\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Please type your query \"\n                \n            />\n            <SearchFormButton type=\"submit\"/>\n            </Form>\n}\n\nSearchBox.propTypes = {\n  to: PropTypes.string,\n}","import { SearchBox } from \"components/SearchBox/SearchBox\"\nimport { useEffect, useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport { getSearch } from '../Services/Api'\nimport Notiflix from \"notiflix\";\nimport MovieList from \"components/MovieList/MovieList\";\n\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [queryResponse, setQueryResponse] = useState([]);\n    const queryRequest = searchParams.get(\"query\") || '';\n    \n    useEffect(() => {\n        if (!queryRequest) {\n                return\n        } else {\n            \n            const Query = async () => {\n            try {\n                const data = await getSearch(queryRequest);\n                const queryData = data\n                setQueryResponse(queryData)\n            }\n            catch (error) {console.log(error) }\n        }\n        Query()\n            }\n    }, [queryRequest]);\n    \n    const onSubmit = (e) => {\n        e.preventDefault();\n        const searchParams = e.target.elements.query.value\n        if (searchParams.trim() === '') {\n            Notiflix.Notify.warning('Please type your request')\n        }\n        setSearchParams({query:searchParams})\n    }\n\n\n    return <div>\n        <SearchBox onSubmit={onSubmit} />\n        <MovieList data={queryResponse} />\n    </div>\n}\n\nexport default Movies"],"names":["axios","API_KEY","getTrendingMovies","searchParams","response","data","getMoviesInfo","movie_id","getRewiews","getCast","getSearch","query","results","FilmList","styled","ListComponents","LinkStyle","Link","location","useLocation","map","movie","to","id","state","from","title","SearchFormButton","search","Input","Form","SearchBox","onSubmit","name","type","autoComplete","autoFocus","placeholder","useSearchParams","setSearchParams","useState","queryResponse","setQueryResponse","queryRequest","get","useEffect","Query","console","log","e","preventDefault","target","elements","value","trim","Notiflix","MovieList"],"sourceRoot":""}